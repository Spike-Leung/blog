import{r as e,o as n,c as s,a,F as r,b as t,d as l}from"./app.2599e180.js";const o={},i=a("h1",{id:"svn-cheatsheet",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#svn-cheatsheet","aria-hidden":"true"},"#"),t(" SVN Cheatsheet")],-1),c=a("p",null,"本文整理一些SVN的常用指令，方便查询使用。",-1),d=a("p",null,"命令行相对来说还是有些麻烦的，你也可以使用GUI去完成SVN操作。",-1),p=t("Window上有"),u={href:"https://tortoisesvn.net/",target:"_blank",rel:"noopener noreferrer"},m=t("TortoiseSVN"),h=t("Mac有"),b={href:"https://www.smartsvn.com/",target:"_blank",rel:"noopener noreferrer"},v=t("SmartSVN"),f=t("， 笔者当时用的就是"),g=a("code",null,"SmartSVN",-1),x=t("，但有些功能需要付费，有的地方也不方便，所以就学习了命令行操作。"),k=l('<p>或者也可以用<code>Emacs</code>， 它集成了一套还不错的版本控制操作，<code>Emacs</code>结合命令行，基本上覆盖了我所有的使用场景了。</p><h2 id="svn-info" tabindex="-1"><a class="header-anchor" href="#svn-info" aria-hidden="true">#</a> svn info</h2><p>查看SVN仓库信息</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;</span>  svn info\nPath: <span class="token builtin class-name">.</span>\n\nWorking Copy Root Path: /Users/spike/Documents/svn/project/xxxx\nURL: http://1.1.1.1/xxx/xxx/xxx\nRelative URL: ^/xxxx\nRepository Root: xxxx\nRepository UUID: xxxxx\nRevision: <span class="token number">28885</span>\nNode Kind: directory\nSchedule: normal\nLast Changed Author: xxx\nLast Changed Rev: <span class="token number">28885</span>\nLast Changed Date: <span class="token number">2021</span>-07-30 <span class="token number">16</span>:42:16 +0800 <span class="token punctuation">(</span>五, <span class="token number">30</span>  <span class="token number">7</span> <span class="token number">2021</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="svn-checkout" tabindex="-1"><a class="header-anchor" href="#svn-checkout" aria-hidden="true">#</a> svn checkout</h2><p>获取到SVN仓库地址后，拉取仓库代码</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn checkout URL\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="svn-list" tabindex="-1"><a class="header-anchor" href="#svn-list" aria-hidden="true">#</a> svn list</h2><p>当知道SVN仓库的URL，可以通过<code>svn list</code>查看仓库下包行那些Tags，哪些分支</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn list URL\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="svn-cat" tabindex="-1"><a class="header-anchor" href="#svn-cat" aria-hidden="true">#</a> svn cat</h2><p>查看<code>menu.jsp</code>在<code>12343</code>版本的内容</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn cat menu.jsp -r 12343\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="svn-log" tabindex="-1"><a class="header-anchor" href="#svn-log" aria-hidden="true">#</a> svn log</h2><h3 id="查看" tabindex="-1"><a class="header-anchor" href="#查看" aria-hidden="true">#</a> 查看</h3><p>查看最近10条提交记录</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn log -l 10\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>查看2020-01-01到2020-12-31，包含msg和msg2的日志</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svne log  --search &#39;msg&#39; --search-and &#39;msg2&#39; -r {2020-01-01}:{2020-12-31}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>查看某个提交涉及的改动文件</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn log -v -r &lt;REV&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="编辑" tabindex="-1"><a class="header-anchor" href="#编辑" aria-hidden="true">#</a> 编辑</h3><p>有时，提交信息错了，想去修改，可以通过以下命令：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn propedit -r &lt;REV&gt; --revprop svn:log\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>&lt;REV&gt;</code>是对应的日志序号，例如1234</p><p>这个命令会打开一个编辑器，让你编辑日志信息，但如果没有配置，就会出现一个报错:</p><p><code>svn: could not use external editor to fetch log message</code></p><p>可以去修改SVN的配置文件，指定编辑器， 在Mac中，路径一般是在<code>~/.subversion/config</code>, 找到<code>editor-cmd</code>, 指定为你喜欢的编辑器即可。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">### Section for configuring external helper applications.</span>\n<span class="token punctuation">[</span>helpers<span class="token punctuation">]</span>\n<span class="token comment">### Set editor-cmd to the command used to invoke your text editor.</span>\n<span class="token comment">###   This will override the environment variables that Subversion</span>\n<span class="token comment">###   examines by default to find this information ($EDITOR, </span>\n<span class="token comment">###   et al).</span>\neditor-cmd <span class="token operator">=</span> emacsclient\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="svn-update" tabindex="-1"><a class="header-anchor" href="#svn-update" aria-hidden="true">#</a> svn update</h2><p>更新SVN仓库</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn update\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="svn-commit" tabindex="-1"><a class="header-anchor" href="#svn-commit" aria-hidden="true">#</a> svn commit</h2><p>指定要提交的文件，然后提交</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn commit PATH...\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>但是，项目中文件可能很多，一个一个去指定还是有些麻烦的。<code>SVN</code>支持从文件读取路径，于是可以这么做：</p><ol><li><code>svn st -q | cut -c 9- &gt; ~/target.txt</code> 把改动的文件路径全部输出到一个文件中</li><li>打开<code>~/target.txt</code>, 看看有没有路径是需要删除的，有的话就删除，剩下的就是之后要提交的文件</li><li><code>svn commit --targets ~/target.txt</code> 使用<code>~/target.txt</code>的内容进行提交</li></ol>',37),S=t("参考"),w={href:"https://stackoverflow.com/questions/1516188/svn-commit-specific-files",target:"_blank",rel:"noopener noreferrer"},V=t("SVN Commit specific files"),R=l('<h2 id="svn-diff" tabindex="-1"><a class="header-anchor" href="#svn-diff" aria-hidden="true">#</a> svn diff</h2><p>查看某个文件在某个版本的改动</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn diff -c &lt;REV&gt; &lt;PATH&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>查看<code>menus.jsp</code>在23304相对于23314的改动</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>svn diff menu.jsp -r 23304:23314\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="diff-美化" tabindex="-1"><a class="header-anchor" href="#diff-美化" aria-hidden="true">#</a> diff 美化</h3><p>默认<code>svn diff</code>输出的内容颜色是一样的，只能通过<code>+</code>和<code>-</code>判断那些是增加，那些是删除, 为了直观一些，可以安装<code>colordiff</code>进行美化</p><ol><li><code>brew install colordiff</code> 安装</li><li><code>svn diff menu.jsp -r 23304:23314 | colordiff</code> 通过管道把输出交给<code>colordiff</code> 美化</li></ol>',8),N=t("具体可以参考"),q={href:"http://icodeit.org/2015/02/make-a-colorful-svn-diff/",target:"_blank",rel:"noopener noreferrer"},L=t("制作一个更漂亮的svn Diff命令"),U=a("p",null,"尽管已经有了颜色区分了，但还是不太方便比对，可以参考以下两篇文章，使用比对工具进行查看：",-1),_={href:"https://stackoverflow.com/questions/25050303/is-there-any-free-svn-diff-tool-for-mac-instead-of-use-command-line-svn-diff",target:"_blank",rel:"noopener noreferrer"},j=t("Is there any free svn diff tool for Mac Instead of use command line 'svn diff' "),y={href:"https://gist.github.com/dtjm/523243",target:"_blank",rel:"noopener noreferrer"},E=t(" Wrapper to use OS X FileMerge when calling "),C=a("code",null,"svn diff",-1),D=l('<h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><h3 id="节省输入" tabindex="-1"><a class="header-anchor" href="#节省输入" aria-hidden="true">#</a> 节省输入</h3><p>如果你使用命令行操作<code>SVN</code>, 总是频繁的输入重复的命令会很烦恼吧？你 可以通过定制一些别名来节省操作。</p><p>例如编辑日志，每次都要输入<code>svn propedit -r &lt;REV&gt; --revprop svn:log</code>就很麻烦，也有可能记不住那么多参数。</p><p>笔者使用的是<code>zsh</code>, 在<code>.zshrc</code>中可以定义函数, 如</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># edit svn log</span>\n<span class="token keyword">function</span> <span class="token function-name function">editSvnLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin class-name">cd</span> <span class="token string">&quot;/Users/spike/Documents/svn/project/xxxx/&quot;</span>\n    svn propedit -r <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> --revprop svn:log\n    <span class="token builtin class-name">cd</span> -\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>之后，我就可以调用<code>editSvnLog xxxx</code>去编辑日志，输入要修改的<code>xxxx</code>对应的提交信息了。</p><p>如果你用的是<code>bash</code>, 那就改<code>.bashrc</code>.</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>',9),I={href:"https://stackoverflow.com/questions/1516188/svn-commit-specific-files",target:"_blank",rel:"noopener noreferrer"},T=t("SVN Commit specific files"),M={href:"https://stackoverflow.com/questions/21720865/how-to-view-changes-made-to-files-on-a-certain-revision-in-subversion",target:"_blank",rel:"noopener noreferrer"},H=t("How to view changes made to files on a certain revision in Subversion"),P={href:"https://stackoverflow.com/questions/86049/how-do-i-ignore-files-in-subversion",target:"_blank",rel:"noopener noreferrer"},A=t("How do I ignore files in Subversion?"),O={href:"https://stackoverflow.com/questions/7131670/make-a-bash-alias-that-takes-a-parameter",target:"_blank",rel:"noopener noreferrer"},W=t("Make a Bash alias that takes a parameter?");o.render=function(t,l){const o=e("OutboundLink");return n(),s(r,null,[i,c,d,a("p",null,[p,a("a",u,[m,a(o)])]),a("p",null,[h,a("a",b,[v,a(o)]),f,g,x]),k,a("p",null,[S,a("a",w,[V,a(o)])]),R,a("p",null,[N,a("a",q,[L,a(o)])]),U,a("ol",null,[a("li",null,[a("p",null,[a("a",_,[j,a(o)])])]),a("li",null,[a("p",null,[a("a",y,[E,C,a(o)])])])]),D,a("ul",null,[a("li",null,[a("a",I,[T,a(o)])]),a("li",null,[a("a",M,[H,a(o)])]),a("li",null,[a("a",P,[A,a(o)])]),a("li",null,[a("a",O,[W,a(o)])])])],64)};export default o;
